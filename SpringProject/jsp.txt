홍진숙
hongcine@itwillbs.co.kr

자바 스프링 웹 개발자 양성

주말 : 온라인 동영상강의
직업기초(이력서,자기소개서,모의면접)
네트워크개념, 서버개념
프론트엔드 : HTML - CSS - Javascript - jQuery
백엔드       : 자바 - JSP - MVC - 스프링(전자정부 표준프레임워크)
데이터베이스 : 오라클,Mysql,...
프로젝트 : 기능설계,파일설계, 형상관리(git) => 포트폴리오

1. 실무교육
2. 팀프로젝트(포트폴리오)
3. 자격증(정보처리)

개인프로젝트 : HTML - CSS - Javascript - JSP
팀프로젝트 : jQuery - MVC - 스프링(전자정부 표준프레임워크)

설치
1. 자바 JDK 1.8
2. 웹서버, 웹애플리케이션서버
   아파치 톰캣
https://tomcat.apache.org/
Download
Tomcat 8
8.5.75
32-bit/64-bit Windows Service Installer (pgp, sha512)
apache-tomcat-8.5.75.exe

웹서버 stop 웹페이지를 제공하는 서비스를 종료

사용자
웹브라우저를 실행 주소줄에 http://localhost:8080

웹서버 start  웹페이지를 제공하는 서비스를 시작

사용자
웹브라우저를 실행 주소줄에 http://localhost:8080

웹서버에서 웹페이지 제공하는 위치
C:\Program Files\Apache Software Foundation\Tomcat 8.5\webapps\ROOT

자기자신 사용자
웹브라우저를 실행 주소줄에 http://localhost:8080/index.jsp
웹브라우저를 실행 주소줄에 http://localhost:8080/test1.html
웹브라우저를 실행 주소줄에 http://localhost:8080/test2.jsp
자기자신 사용자
웹브라우저를 실행 주소줄에 http://127.0.0.1:8080/index.jsp
웹브라우저를 실행 주소줄에 http://127.0.0.1:8080/test1.html
웹브라우저를 실행 주소줄에 http://127.0.0.1:8080/test2.jsp

IP번호
cmd 
ipcofing
IPv4 주소 . . . . . . . . . : 192.168.7.200

다른컴퓨터 사용자
웹브라우저를 실행 주소줄에 http://192.168.7.200:8080/index.jsp
웹브라우저를 실행 주소줄에 http://192.168.7.200:8080/test1.html
웹브라우저를 실행 주소줄에 http://192.168.7.200:8080/test2.jsp

웹서버 (아파치) : 웹브라우저를 통해서 웹페이지(html)를 전세계에 제공 서비스
웹애플리케이션서버(톰캣) : jsp(java) 명령을 실행해서 html 형태 변경함

웹서버 stop 웹페이지를 제공하는 서비스를 종료

3. 데이터베이스

4. 개발도구(개발툴) 
- 메모장
- 에디터(notepad++)
https://notepad-plus-plus.org/downloads/

- 전문개발툴(통합개발툴, 이클립스)
eclipse.org
https://www.eclipse.org/downloads/
Download Packages
Eclipse IDE for Enterprise Java and Web Developers
Windows x86_64
eclipse-jee-2021-12-R-win32-x86_64.zip

설치 : 압축풀기 
C:\eclipse_jsp7
바탕화면 바로가기 만들기

작업영역 
d:workspace_jsp7 폴더 만들기

1. 환경설정 => 한글 설정 utf-8
Window - Preferences 
General - Workspace 
- Text file encoding - Other - UTF-8
Web - CSS Files 
- Encoding -ISO 10546/Unicode(UTF-8)
Web- HTML Files 
- Encoding -ISO 10546/Unicode(UTF-8)
Web- JSP Files 
- Encoding -ISO 10546/Unicode(UTF-8)

2. 웹서버를 가져오기 => 포트설정
File - New - Other - Server - Server -Next
Apache - Tomcat v8.5 Server - Next 
Browse ...
C:\Program Files\Apache Software 
Foundation\Tomcat 8.5
Next - finish

Servers 탭 - Tomcat 8.5 - 더블클릭
Ports - Tomcat admin port - 8005 
x클릭 - 저장

3. 프로젝트 만들기  => 자바1.8변경
File - New - Other - Web - Dynamic Web Project
Next - Project Name : JspProject -Next-Next
web.xml 체크 - Finish

프로젝트 - Properties
java Compiler - JDK Compliance - 체크해제
1.8 선택
Project Facets - Java 1.8
Apply and Close


4. 웹서버와 프로젝트 연결
Servers 탭 
Tomcat 8.5 - 오른쪽 버튼 - Add and Remove
프로젝트 선택 - Add - Finish
------------------------------------------------
JSP(Java Server Page)
클라이언트 서버 요청 응답 동작 원리 이해

<%  %> 자바,jsp명령
<%= %> 태그중간에 자바,jsp내용 하나만 출력
<%@ %> 페이지 설정
<%! %> 전영역 사용하는 변수 선언, 멤버함수(메서드) 선언

jsp 내장객체 : request, response, session, application, pageContext, out, ...

jsp 액션태그 : include, forward

쿠키 자바내장객체

데이터베이스 연동  자바내장객체 => 회원가입 , 로그인, 게시판,...

데이터베이스 연동 => 자바등장 => 회원가입, 로그인, 게시판,..

FunWeb사이트 => 개인프로젝트 진행

Model2(MVC)
스프링(MVC) 프레임워크  => 팀프로젝트 진행
-------------------------------------------------
1. 클라이언트 서버 요청 응답 동작 원리 이해
=> 사용자(유저,클라이언트, 웹브라우저 주소) 
- http://localhost:8080/JspProject/js1/test19.html
localhost:8080 서버에 test19.html 페이지 보고싶다 요청

=> http (html전송통신규약)가 서버에 요청정보를 들고 감

=> 웹서버 도착 요청정보를 가지고 html, jsp 판별
   웹서버 test19.html 찾아서  http전달
   
=> http 응답정보를 들고 사용자 컴퓨터로 되돌아옴    
=> 사용자에 컴퓨터화면에 보여줌
------------------------------
- http://localhost:8080/JspProject/js1/
a.jsp?id=lee&pwd=ss&name=김길동&gender=남&hobby=여행&intro=소개&grade=1
localhost:8080 서버에 a.jsp 페이지 보고싶다하면서 태그정보를 들고 요청

=> http가 요청정보를 들고(get:주소줄에 담아서 전달,post:http에 담아서 전달) 서버로 감
   
=> 웹서버 도착 a.jsp 요청하면 html에 변경하는 처리작업 필요

=> 웹애플리케이션서버(WAS) 처리작업
1) request(http가 들고온 요청 저장), response(서버처리한결과 응답 저장) 내장객체 기억장소 만듬
2) 서블릿(처리담당자)지정 : 요청정보를 이용해서 jsp =>html 변경 => 처리한 정보를 response 저장

=> 웹서버에 전달
=> http에 전달
=> 사용자 컴퓨터에 전달
=> request,response, 서블릿 기억장소 해제(쇼멸)
----------------------------------------------

데이터베이스 : 데이터 저장
데이터베이스관리시스템 (DBMS) : 오라클, Mysql, MS-SQL,...

데이터베이스 언어 : SQL 
데이터 정의어 : 데이터저장할 공간 만들고 ,수정하고, 삭제(create,alter,drop)
데이터 조작어 : 공간안에 데이터를 저장, 수정, 삭제, 조회(insert,update,delete,select)
데이터 제어어 : 데이터베이스 관리할 사용자 만들고 권한부여(grant, revoke)

환경설정
내PC- 속성 - 고급시스템설정 - 고급 - 환경변수
시스템변수 - path - 편집 - 새로만들기 
C:\Program Files\MySQL\MySQL Server 8.0\bin

cmd
mysql -uroot -p
1234
//데이터베이스 상태
mysql>status
//데이터베이스 목록
mysql>show databases;
//데이터베이스 선택
mysql>use world;
//테이블 목록
mysql>show tables;
//테이블 안에 내용조회
mysql>select * from country;

//데이터베이스(프로젝트 공간) 만들기
create database jspdb7;
//데이터베이스 목록
mysql>show databases;
//데이터베이스 선택
mysql>use jspdb7
//테이블 목록
mysql>show tables;

//테이블(주제별로 저장공간) 만들기
// 주제 : 학생 - 학번, 이름, 국어, 영어, 수학 내용정하기
create table student(
    num int primary key,
    name varchar(10)
);
//테이블 목록
mysql>show tables;
//테이블 구조
mysql>desc student;

//테이블 안에 내용조회(학생정보조회)
mysql>select * from student;

// 테이블에 데이터 저장 (학생정보입력)
//insert into 테이블이름(열이름,열이름) values(값,'값');
insert into student(num,name) values(1,'홍길동');
insert into student(num,name) values(2,'이길동');
insert into student(num) values(3);

// 테이블에 데이터 수정 (학생정보수정)
// update 테이블이름 set 수정열=값, 수정열=값 where 조건열=값; 
update student set name='김길동' where num=3;
// 학생이름이 학생번호 1번, 홍길동 학생  변경  => 학생번호 5번, 일길동 변경
update student set num=5, name='일길동' where num=1 and name='홍길동';

// 테이블에 데이터 삭제 (학생정보삭제)
// delete from 테이블이름 where 조건열=값;
delete from student where num=5;

// 자바 웹서버 => 디비서버 접속
// 외부 데이터베이스 제공 API 가져오기 => JDBC : 자바와 데이터베이스 연결 프로그램 설치
// mysql데이터베이스에서 제공하는 JDBC  프로그램 :   mysql-connector-java-8.0.22.jar
// 설치 : src - main - webapp - WEB-INF - lib - mysql-connector-java-8.0.22.jar

// 자바 내장객체  Connection, DriverManager,  PreparedStatement, ResultSet 데이터베이스 접속
// 1단계  JDBC 프로그램 로더 
// 2단계  디비연결  DriverManager 디비주소, 디비접속아이디, 디비접속비밀번호 
//         연결정보 저장 => Connection
// 3단계  연결정보를 이용해서 sql구문 만들기 =>  PreparedStatement
// 4단계   PreparedStatement sql구문 실행 (insert,update,delete) ,
//        select 결과 저장 => ResultSet
// 5단계  ResultSet 저장된 내용을 출력, 저장

// mysql -uroot -p jspdb7
// 1234

// 회원 테이블 만들기
// 아이디(키 지정) 비밀번호 이름 이메일 전화번호 주소 ....
create table member(
	id varchar(10) primary key,
	pass varchar(10),
	name varchar(10),
	date datetime
);

// 열추가
alter table member
add email varchar(20);

alter table member
add address varchar(50);

alter table member
add phone varchar(20);

alter table member
add mobile varchar(20);

mysql> show tables;
mysql> desc member;

// mysql -uroot -p jspdb7
// 1234

// 게시판 테이블 만들기
// 글번호, 작성자, 비밀번호, 제목, 내용, 조회수, 등록일 
create table board(
	num int primary key,
	name varchar(10),
	pass varchar(10),
	subject varchar(50),
	content varchar(500),
	readcount int,
	date datetime
);


mysql> show tables;
mysql> desc board;

// mysql -uroot -p jspdb7
// 1234

alter table board
add file varchar(50);

서버프로그램구현 
포트폴리오 
개인프로젝트
5월 18일 
 
https://jquery.com/download/
script폴더에 jquery-3.6.0.js 넣기

-----------------------------------------------
JSP(JDBC)=> insertForm.jsp(화면,View) => insertPro.jsp(처리Controller,디비Model)

JSP1(Model1) 
=> insertForm.jsp(화면,View) => insertPro.jsp(처리Controller,호출) <=> MemberDAO(디비Model)

JSP2(Model2,MVC) : 주소매핑(가상주소 실제페이지 연결)
시작점 : 가상주소 insert.me
web.xml 서블릿 지정 => 가상주소 insert.me    => insertForm.jsp(화면,View) 
                  => 가상주소 insertPro.me <=> (Action)Service.java(처리Controller,호출) <=> MemberDAO(디비Model)
                  => 가상주소 login.me 

회원(JSP) : 1명이 프로젝트 진행 방식
join.jsp(View) => joinPro.jsp(Controller) => DTO, DAO.java DB(Model) insert
=> login.jsp(View) => loginPro.jsp(Controller) => DTO, DAO.java DB(Model) userCheck()

MVC 프로그램방식(패턴)
디비 Model
화면 View
처리 Controller 

회원(MVC, 모델2) : 여러명이 프로젝트 진행 방식, 가상주소(보안상 이점)=> 주소매핑
가상주소 join.me => joinPro.me       
join.jsp(View) => joinPro.java 메서드()(Controller) => DTO, DAO.java DB(Model) 메서드() insert()
=> 가상주소 login.me => loginPro.me 
=> login.jsp(View) => loginPro.java 메서드()(Controller) => DTO, DAO.java DB(Model) 메서드() userCheck()


- http://localhost:8080/FunWeb2/join.me
localhost:8080 서버에 join.me 페이지 보고싶다하면서 태그정보를 들고 요청

=> http가 요청정보를 들고(get:주소줄에 담아서 전달,post:http에 담아서 전달) 서버로 감
   
=> 웹서버 도착 join.me 요청하면 html에 변경하는 처리작업 필요

=> 웹애플리케이션서버(WAS) 처리작업

0) 프로그래머 web.xml(서블릿 설정되어 있는지 모든 페이지 참조) 
=> 서블릿(처리담당자)지정 => .me로 끝나는 주소가 들어오면 
=>  주소값 join.me => MemberController 파일 가서 => join.jsp 주소매핑


1) request(http가 들고온 요청 저장), response(서버처리한결과 응답 저장) 내장객체 기억장소 만듬
2) 서블릿(처리담당자)지정 : 요청정보를 이용해서 jsp =>html 변경 => 처리한 정보를 response 저장

=> 웹서버에 전달
=> http에 전달
=> 사용자 컴퓨터에 전달
=> request,response, 서블릿 기억장소 해제(쇼멸)


가상주소 http://localhost:8080/FunWeb2/joinPro.me
=> localhost:8080 서버에 joinPro.me 페이지 보고싶다하면서 태그정보를 들고 요청
=> http가 요청정보를 들고(get:주소줄에 담아서 전달,post:http에 담아서 전달) 서버로 감
=> 웹서버 도착 joinPro.me 요청하면 html에 변경하는 처리작업 필요
=> 웹애플리케이션서버(WAS) 처리작업
1. web.xml 참조(joinPro.me => 서블릿 지정) => MemberController=> 가상주소 -> 페이지 연결(매핑)
2. request(요청정보 저장) , response 객체생성=> 기억장소 할당
3. 서블릿 처리 -> doGet() getPost() 메서드 호출 -> doPro() 호출 처리
응답정보를 response에 저장
웹서버 전달
http 전달 
사용자 전달

// 스프링 프레임워크 : 자바로 만든 프로그램 틀
                : 코드 간결, 반복 최소화, 자동화, 구현하고자 하는 코드만 작성, 경량화
                : 전자정부 표준프레임워크 
                : 스프링 부트
// 설치
//1. 이클립스 + 스프링 툴을 추가 설치                
//2. 이클립스와 스프링 툴이 설치된 프로그램을 다운 받아서 사용

spring.io
이전 스프링 sts툴
https://github.com/spring-projects/sts4/wiki/Previous-Versions
Spring Tools 4.12.0 
https://download.springsource.com/release/STS4/4.12.0.RELEASE/dist/e4.21/
spring-tool-suite-4-4.12.0.RELEASE-e4.21.0-win32.win32.x86_64.self-extracting.jar
=>C드라이버 압축풀기

C:\spring-tool-suite-4-4.12.0.RELEASE-e4.21.0-win32.win32.x86_64.self-extracting
=> content.zip 압축풀기

C:\spring-tool-suite-4-4.12.0.RELEASE-e4.21.0-win32.win32.x86_64.self-extracting\
contents\sts-4.12.0.RELEASE

SpringToolSuite4.exe => 보내기 => 바탕화면으로 바로가기 만들기

D:\workspace_sts7 폴더 만들기

sts4환경설정
1. Help - Eclipse Marketplace 프로그램 설치
sts 검색
Spring Tools 3 Add-On for Spring Tools 4.3.9.22 Release
install - confirm - Confirm 
- I accept the terms of the license agreements체크
Finish

Web Developer 검색

Eclipse Web Developer Tools 3.23
install
confirm - finish

Eclipse Enterprise Java Web Developer Tools 3.23
install
finish

2. Window - Preferences
General - workspace - 
Text file encoding
Other - UTF-8

WebBrower - external - 크롬선택

Web - CSS Files - UTF-8
      HTML Files - UTF-8
      JSP Files - UTF-8
      
Apply - close

3. 서버 가져오기 
 File -new - other - Server -server-Next
 Apache Tomcat 8.5 Server - Next
 Browse -
 C:\Program Files\Apache Software Foundation\Tomcat 8.5
 Next - Finish

서버 환경설정
Servers 탭 - Ports - admin port - 8005       
       
4. 프로젝트 만들기
File -new - other -Spring
- Spring Legacy Project -Next
Project name : SpringProject
Templates
Spring MVC Project 선택 -Next
Yes
com.itwillbs.myweb
Finish

5. 서버 프로젝트 연결
Servers 탭 - 오른쪽 버튼 - Add and Remove
SpringProject > Add - Finish


1. MVC 이해
2. DI(의존관계주입) 객체생성 이해
3. 프로그램 설치 => Maven 이용해서 자동으로 프로그램 설치
pom.xml 다운받고자하는 코드를 넣으면 자동으로 다운 받아짐
4. 기본 JDBC 디비작업(MemberDAOImpl sql구문)
5. 마이바티스(외부프로그램) 디비작업(xml sql구문)
6. 파일업로드, Ajax 사용
=> 팀프로젝트 코딩









